@model PortfolioProject.Models.PaginationEventIndexViewModel

@{
    ViewData["Title"] = "Events";
}

<h1>Events</h1>

<p>
    <a class="btn btn-primary" asp-controller="EventForms" asp-action="Create">Add New Event</a>
</p>

@if (Model.EventForms.Count > 0)
{ 
<table class="table table-striped table-hover">
    <thead>
			<tr>
			<th>
				@Html.DisplayNameFor(model => model.EventForms[0].Category.Category)
			</th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].EventTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].StartDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].EndDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].EventBy.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].EventBy.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].EventBy.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].Location.LocationName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].Location.StreetAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].Location.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].Location.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventForms[0].Location.Zip)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.EventForms) 
        {
        <tr>
			<td>
				@Html.DisplayFor(modelItem => item.Category.Category)
			</td>
			<td>
                @Html.DisplayFor(modelItem => item.EventTitle)
            </td>           

            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EventBy.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EventBy.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EventBy.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.LocationName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.StreetAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.State)
            <td>
                @Html.DisplayFor(modelItem => item.Location.Zip)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.EventFormId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.EventFormId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.EventFormId">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
}
else
{
 <h2>There are no more events.</h2>
}

<nav aria-label="Event List Pages">
    <ul class="pagination">
    @for (int i = 1; i <= Model.LastPage; i++)
    {
        if (i == Model.CurrentPage)
        {
            <li class="page-item active">
                <a class="page-link">@i</a>
            </li>
        }
        else 
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-id="@i">@i</a>
            </li>
        }
    }
    </ul>
</nav>